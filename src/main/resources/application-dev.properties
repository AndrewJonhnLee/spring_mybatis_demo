spring.datasource.url=jdbc:mysql://127.0.0.1/amoy?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=1234qwer

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#开启对sql语句的打印
spring.jpa.properties.hibernate.show_sql=true




# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0


#shiro 配置

#shiro.loginUrl = /login.html
#
## Let Shiro Manage the sessions
#shiro.userNativeSessionManager = true
#
## disable URL session rewriting
#shiro.sessionManager.sessionIdUrlRewritingEnabled = false



#mybatis 注解配置
logging.level.root=info
logging.level.sample.mybatis.mapper=TRACE
#only xml
mybatis.config-location=classpath:mybatis-config.xml


#freemark 配置
# Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.
#spring.freemarker.allow-request-override=false
# Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.
#spring.freemarker.allow-session-override=false
# Enable template caching.
spring.freemarker.cache=false
# Template encoding.
spring.freemarker.charset=UTF-8
# Check that the templates location exists.
spring.freemarker.check-template-location=true
# Content-Type value.
spring.freemarker.content-type=text/html
# Enable MVC view resolution for this technology.
spring.freemarker.enabled=true
# Set whether all request attributes should be added to the model prior to merging with the template.
#spring.freemarker.expose-request-attributes=false
# Set whether all HttpSession attributes should be added to the model prior to merging with the template.
#spring.freemarker.expose-session-attributes=false
# Set whether to expose a RequestContext for use by Spring's macro library, under the name "springMacroRequestContext".
#spring.freemarker.expose-spring-macro-helpers=true
# Prefer file system access for template loading. File system access enables hot detection of template changes.
#spring.freemarker.prefer-file-system-access=true
# Prefix that gets prepended to view names when building a URL.
#spring.freemarker.prefix=
# Name of the RequestContext attribute for all views.
#spring.freemarker.request-context-attribute=
# Well-known FreeMarker keys which will be passed to FreeMarker's Configuration.
#spring.freemarker.settings.*=
# Suffix that gets appended to view names when building a URL.
spring.freemarker.suffix=.html
# Comma-separated list of template paths.
spring.freemarker.template-loader-path=classpath:/templates/
# White list of view names that can be resolved.
#spring.freemarker.view-names=



#启用远程更新
spring.devtools.remote.secret=1234
spring.devtools.remote.debug.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.remote.debug.local-port=8007

#远程调试默认使用的端口是 8000 ，你可以通过 spring.devtools.remote.debug.local-port 来修改。其他使用没区别,对外暴露http8000端口
#你可以通过查看JAVA_OPTS来看远程调试是否被启用，主要是观察是否有 -Xdebug -Xrunjdwp:server=y,transport=dt_socket,suspend=n 参数,不需要指定address,随机使用空闲端口
#映射到8000,避免了因为防火墙,端口无法有效访问的问题.
#必须确保远程应用开启了对远程调试的支持,然后启动RemoteSpringApplication就可以了
#java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,suspend=n -jar target/spring-boot-sample-devtools-1.4.0.BUILD-SNAPSHOT.jar
#JAVA_OPTS: "-Xdebug -Xrunjdwp:server=y,transport=dt_socket,suspend=n"

#java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=8000,suspend=n \
#       -jar target/myproject-0.0.1-SNAPSHOT.jar
#不建议使用
#mvn spring-boot:run -Drun.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"

spring.devtools.restart.enabled=true
#资源排除,默认监控/META-INF/maven, /META-INF/resources, /resources, /static, /public or /templates
spring.devtools.restart.exclude=static/**


#添加额外的监控
#spring.devtools.restart.additional-paths
#出发文件,可配置全局的~/.spring-boot-devtools.properties.  spring.devtools.reload.trigger-file=.reloadtrigger
#spring.devtools.restart.trigger-file

#添加远程更新
#Select Run Configurations…​ from the Run menu.
#Create a new Java Application “launch configuration”.
#Browse for the my-app project.
#Use org.springframework.boot.devtools.RemoteSpringApplication as the main class.
#Add https://myapp.cfapps.io to the Program arguments (or whatever your remote URL is).



#优先级访问,
#private static final String[] CLASSPATH_RESOURCE_LOCATIONS = {
#   "classpath:/META-INF/resources/", "classpath:/resources/",
#   "classpath:/static/", "classpath:/public/" };

endpoints.mappings.sensitive=false
management.security.enabled=false


#参考github https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
#spring.datasource.druid.initial-size=
#spring.datasource.druid.max-active=
#spring.datasource.druid.min-idle=
#spring.datasource.druid.max-wait=
#spring.datasource.druid.pool-prepared-statements=
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=
#spring.datasource.druid.max-open-prepared-statements= #和上面的等价
#spring.datasource.druid.validation-query=
#spring.datasource.druid.validation-query-timeout=
#spring.datasource.druid.test-on-borrow=
#spring.datasource.druid.test-on-return=
#spring.datasource.druid.test-while-idle=
#spring.datasource.druid.time-between-eviction-runs-millis=
#spring.datasource.druid.min-evictable-idle-time-millis=
#spring.datasource.druid.max-evictable-idle-time-millis=
#spring.datasource.druid.filters= #配置多个英文逗号分隔
#监控配置
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#spring.datasource.druid.web-stat-filter.enabled= #是否启用StatFilter默认值true
#spring.datasource.druid.web-stat-filter.url-pattern=
#spring.datasource.druid.web-stat-filter.exclusions=
#spring.datasource.druid.web-stat-filter.session-stat-enable=
#spring.datasource.druid.web-stat-filter.session-stat-max-count=
#spring.datasource.druid.web-stat-filter.principal-session-name=
#spring.datasource.druid.web-stat-filter.principal-cookie-name=
#spring.datasource.druid.web-stat-filter.profile-enable=
#
## StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#spring.datasource.druid.stat-view-servlet.enabled= #是否启用StatViewServlet默认值true
#spring.datasource.druid.stat-view-servlet.url-pattern=
#spring.datasource.druid.stat-view-servlet.reset-enable=
#spring.datasource.druid.stat-view-servlet.login-username=
#spring.datasource.druid.stat-view-servlet.login-password=
#spring.datasource.druid.stat-view-servlet.allow=
#spring.datasource.druid.stat-view-servlet.deny=
#
## Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
#spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
# 如果spring.datasource.druid.aop-patterns要代理的类没有定义interface请设置spring.aop.proxy-target-class=true